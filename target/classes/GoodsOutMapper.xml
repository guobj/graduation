<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.gbj.mapper.GoodsOutMapper">
    <resultMap type="com.gbj.model.GoodsOut" id="GoodsOutBaseResultMap">
        <id column="go_id" property="go_id"/>
        <result column="go_nums" property="go_nums"/>
        <result column="go_ctime" property="go_ctime"/>
        <result column="fk_goods_id" property="fk_goods_id"/>
        <result column="fk_emp_id" property="fk_emp_id"/>
        <result column="fk_or_id" property="fk_or_id"/>
        <result column="fk_con_id" property="fk_con_id"/>
        <association property="consumer" column="fk_con_id" select="com.gbj.mapper.ConsumerMapper.load"/>
        <association property="goods" column="fk_goods_id" select="com.gbj.mapper.GoodsMapper.load"/>
        <association property="employee" column="fk_emp_id" select="com.gbj.mapper.EmployeeMapper.load"/>
        <association property="order" column="fk_or_id" select="com.gbj.mapper.OrderMapper.load"/>
<!--         <association property="goods" column="fk_goods_id" resultMap="com.gbj.mapper.GoodsMapper.GoodsBaseResultMap"/> -->
    </resultMap>
    <select id="goodsStockOutList" parameterType="map" resultMap="GoodsOutBaseResultMap">
       <!--  SELECT * FROM goods_out go LEFT JOIN goods g ON go.fk_goods_id=g.goods_id
        <where>
            <if test="go_name!=null and go_name.trim()!=''">
                AND go_name LIKE concat("%",#{go_name},"%")
            </if>
        </where> -->
        SELECT 
            * 
        FROM 
            goods_out 
        <where>
            <if test="goodsout.go_name!=null and goodsout.go_name.trim()!=''">
                AND go_name LIKE concat("%",#{goodsout.go_name},"%")
            </if>
        </where>
        ORDER BY go_id DESC LIMIT #{record},4 
    </select>
    <select id="count" parameterType="map" resultType="integer">
       <!-- select count(*) from goods_out go left join goods g on go.fk_goods_id=g.goods_id
        <where>
            <if test="goods.goods_name!=null and goods.goods_name.trim()!=''">
                AND g.goods_name LIKE concat("%",#{goods.goods_name},"%")
            </if>
        </where> -->
        SELECT 
            COUNT(*) 
        FROM 
            goods_out 
        <where>
            <if test="goodsout.go_name!=null and goodsout.go_name.trim()!=''">
                AND go_name LIKE concat("%",#{goodsout.go_name},"%")
            </if>
        </where>
    </select>
<!--     确认生成出库单 即添加是出库单 -->
    <insert id="goodsStockOut" parameterType="com.gbj.model.GoodsOut">
        INSERT INTO 
            goods_out(go_nums,fk_goods_id,go_ctime,go_sumprice,go_name,go_status,fk_emp_id,fk_or_id,fk_con_id) 
        VALUES 
            (#{go_nums},#{fk_goods_id},#{go_ctime},#{go_sumprice},#{go_name},0,#{fk_emp_id},#{fk_or_id},#{fk_con_id})
    </insert>
<!--     确认出库 即修改出库单状态及添加出库时间 -->
    <update id="confirmGoodsOut" parameterType="com.gbj.model.GoodsOut">
        UPDATE 
            goods_out 
        <set>
            <if test="go_stime!=null and go_stime!=''">
                go_stime=#{go_stime},
            </if>
        </set>
        ,go_status=1 
        WHERE go_id=#{go_id}
    </update>
<!--     查询一条数据 -->
    <select id="load" parameterType="integer" resultMap="GoodsOutBaseResultMap">
        SELECT 
            * 
        FROM 
            goods_out
        WHERE 
            go_id=#{go_id}
    </select>
<!--     取消已生成出单的订单 修改出库单的状态 即-1取消执行 -->
    <update id="cancelGoodsOut" parameterType="integer">
        UPDATE 
            goods_out
        SET 
            go_status=-1
        WHERE
            fk_or_id=#{or_id}
    </update>
  </mapper>